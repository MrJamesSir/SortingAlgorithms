// Online C++ compiler to run C++ program online
#include <iostream>

#include<bits/stdc++.h>

using namespace std;

class Sort{
    
    public:
              void     merge(  int*arr , int  s   , int  e   )
                                {
                                    
                                    
                    int mid =   s   +   (   e   -   s  )/2;
                    
                                    int len1 = mid - s + 1;
                                    int len2 = e - mid;
                                    
                                    int*first = new int[len1];
                                    
                                    int*second = new int[len2];
                                    int mainArrayIndex = s;
                                    for(int i=0;i<len1;i++)
                                        first[i] = arr[mainArrayIndex++];
                                    mainArrayIndex = mid + 1;
                                    
                                    for(int i=0;i<len2;i++)
                                        second[i] = arr[mainArrayIndex++];
                                    
                                    int i=0,j=0;
                                    mainArrayIndex = s;
                                    
                                    while(i<len1&&j<len2)
                                        {
                                        if(first[i]<second[j])
                                            arr[mainArrayIndex++]=first[i++];
                                        else
                                            arr[mainArrayIndex++]=second[j++];
                                        
                                        
                                    }
                                    
                                    
                                    while(i<len1){
                                            arr[mainArrayIndex++]=first[i++];
                                        
                                        
                                    }
                                    
                                    
                                    
                                    while(j<len2){
                                        
                                            arr[mainArrayIndex++]=second[j++];
                                        
                                    }
                                    delete []first;
                                    delete []second;
                                    
                                    
                                    
                                }
                
          void mergeSort( int*arr , int s , int e)
        {
                    
                    
                    if(s>=e)return;
                    
                    
                    int mid =   s   +   (   e   -   s  )/2;
                    
                    
                    mergeSort(  arr ,   s   ,   mid   );
                    
                    mergeSort(  arr ,   mid +   1   ,   e   );
                    
                    merge(  arr ,   s   ,   e   );
                    
                    
                    
                    
             
      
             
                
        }
    
    
    
    
             void insertionSort( int*arr , int size)
        {
                    
                    
             
         for(int i=1;i<size;i++){
             
             int j=i-1;
             int temp = arr[i];
             for(;j>=0;j--){
                 
                 if(arr[j]>temp)
                    arr[j+1]=arr[j];
                    else break;
             }
             arr[j+1]=temp;
             
             
         }
             
                
        }
           
        void bubbleSort( int*arr , int size)
        {
                    
                    
                    for(int i=1;i<size;i++){
                        bool isSorted=false;
                        for(int j=0;j<size-i;j++){
                            if(arr[j]>arr[j+1])swap(arr[j],arr[j+1]);
                        
                            isSorted=true;
                        }
                        if(!isSorted)break;
                    }
                
        }
        
        
        void selectionSort( int*arr , int size){
            
            int minIndex;
            for(int i=0;i<size-1;i++){
                
                minIndex=i;
                
                for(int j=i+1;j<size;j++)
                    if(arr[j]<arr[minIndex])
                        minIndex=j;
                swap(arr[i],arr[minIndex]);
                
            }
        }
};


int main() {

int*arr=new int[10];
for(int i=0;i<10;i++)
    arr[i]=rand()%100;

cout<<" Before Sorting "<<endl;



for(int i=0;i<10;i++)
    cout<<arr[i]<<  "   ";
    
 cout<<endl;
 
cout<<" After Sorting "<<endl;
   
  
  Sort *s = new Sort();
  
   s->selectionSort(arr,10);
  
  
    for(int i=0;i<10;i++)
    cout<<arr[i]<<  "   ";
 cout<<endl;
    

    return 0;
}
